<?php  /*    Abbyy OCR SDK PHP Class modified by Kunal Batra   */class Abby {  private $settings = array();  /**   *Constructor   *   *Initializes a new Abby instance with appid and password.   *   *@param string $app_id   *@param string $pass   */  public function __construct($app_id, $pass)  {    //Setup defaults    $this->settings['app_id']        = $app_id;    $this->settings['pass']          = $pass;  }  public function convert($imageName)  {        //Send Uploaded file to Abby                                          $applicationId = $this->settings['app_id'];    $password = $this->settings['pass'];    $fileName = $imageName;    if($fileName == '')      $fileName = "yourdoc.jpg";    $local_directory=dirname(__FILE__).'/upload';    $filePath = $local_directory.'/'.$fileName;        if(!file_exists($filePath))      {	die('File '.$filePath.' not found.');      }    if(!is_readable($filePath) )      {	die('Access to file '.$filePath.' denied.');      }    // Recognizing with English language to rtf                        // You can use combination of languages like ?language=english,russian or    // ?language=english,french,dutch         // For details, see API reference for processImage method                     $url = 'http://cloud.ocrsdk.com/processImage?language=english&exportFormat=rtf';    // Send HTTP POST request and ret xml response                                            $curlHandle = curl_init();    curl_setopt($curlHandle, CURLOPT_URL, $url);    curl_setopt($curlHandle, CURLOPT_RETURNTRANSFER, 1);    curl_setopt($curlHandle, CURLOPT_USERPWD, "$applicationId:$password");    curl_setopt($curlHandle, CURLOPT_POST, 1);    curl_setopt($curlHandle, CURLOPT_USERAGENT, "PHP Cloud OCR SDK Sample");    $post_array = array(			"my_file"=>"@".$filePath,			);    curl_setopt($curlHandle, CURLOPT_POSTFIELDS, $post_array);    $response = curl_exec($curlHandle);    if($response == FALSE) {      $errorText = curl_error($curlHandle);      curl_close($curlHandle);      die($errorText);    }    $httpCode = curl_getinfo($curlHandle, CURLINFO_HTTP_CODE);    curl_close($curlHandle);    // Parse xml response                                               $xml = simplexml_load_string($response);    if($httpCode != 200) {      if(property_exists($xml, "message")) {	die($xml->message);      }      die("unexpected response ".$response);    }    $arr = $xml->task[0]->attributes();    $taskStatus = $arr["status"];    if($taskStatus != "Queued") {      die("Unexpected task status ".$taskStatus);    }    // Task id                                                                                      $taskid = $arr["id"];    $url = 'http://cloud.ocrsdk.com/getTaskStatus';    $qry_str = "?taskid=$taskid";    while(true)      {	sleep(5);	$curlHandle = curl_init();	curl_setopt($curlHandle, CURLOPT_URL, $url.$qry_str);	curl_setopt($curlHandle, CURLOPT_RETURNTRANSFER, 1);	curl_setopt($curlHandle, CURLOPT_USERPWD, "$applicationId:$password");	curl_setopt($curlHandle, CURLOPT_USERAGENT, "PHP Cloud OCR SDK Sample");	$response = curl_exec($curlHandle);	$httpCode = curl_getinfo($curlHandle, CURLINFO_HTTP_CODE);	curl_close($curlHandle);	// parse xml                                                          	$xml = simplexml_load_string($response);	if($httpCode != 200) {	  if(property_exists($xml, "message")) {	    die($xml->message);	  }	  die("Unexpected response ".$response);	}	$arr = $xml->task[0]->attributes();	$taskStatus = $arr["status"];	if($taskStatus == "Queued" || $taskStatus == "InProgress") {	  // continuewaiting                	  continue;	}	if($taskStatus == "Completed") {	  // exit this loop and proceed to handling the result                     	  break;	}	if($taskStatus == "ProcessingFailed") {	  die("Task processing failed: ".$arr["error"]);	}	die("Unexpected task status ".$taskStatus);      }    // Result is ready. Download it                      $url = $arr["resultUrl"];    $curlHandle = curl_init();    curl_setopt($curlHandle, CURLOPT_URL, $url);    curl_setopt($curlHandle, CURLOPT_RETURNTRANSFER, 1);    // Warning! This is for easier out-of-the box usage of the sample only.          // The URL to the result has https:// prefix, so SSL is required to          // download from it. For whatever reason PHP runtime fails to perform          // a request unless SSL certificate verification is off.                      curl_setopt($curlHandle, CURLOPT_SSL_VERIFYPEER, false);    $response = curl_exec($curlHandle);    curl_close($curlHandle);    // Let user donwload rtf result              //header('Content-type: application/rtf');                         //header('Content-Disposition: attachment; filename="file.rtf"');     //echo $response;                      $parts = pathinfo($fileName);    $abbyname = $parts['filename'];    file_put_contents('upload/'.$abbyname.'.rtf',$response);    return $abbyname.'.rtf';  }  }?>